name: 'Terraform Deployment'

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    name: 'Dockerization'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.11
        with:
          versionSpec: '6.0.x'

      - name: Determine Version
        id: version_step # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v3.1.11

      - run: |
          echo "Patch (env.patch) : $env:patch"
        name: Display mapped local env (pwsh - outputs with prefix)
        shell: pwsh
        env:
          patch: ${{ steps.version_step.outputs.patch }}

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    needs: build
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./terraform/

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: |
          terraform plan -var "azure_subscription=${{ secrets.AZURE_SUBSCRIPTION }}" \
            -var "docker_registry_username=${{ secrets.DOCKER_REGISTRY_USERNAME }}" \
            -var "docker_registry_password=${{ secrets.DOCKER_REGISTRY_PASSWORD }}" \
            -var "nginx_tag=${{ env.VERSION }}"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          terraform apply -auto-approve -var "azure_subscription=${{ secrets.AZURE_SUBSCRIPTION }}" \
            -var "docker_registry_username=${{ secrets.DOCKER_REGISTRY_USERNAME }}" \
            -var "docker_registry_password=${{ secrets.DOCKER_REGISTRY_PASSWORD }}" \
            -var "nginx_tag=${{ env.VERSION }}"
