name: 'Terraform Deployment'

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    name: 'Dockerization'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install GitVersion
        run: |
          wget -qO- https://github.com/GitTools/GitVersion/releases/latest/download/gitversion-linux.tar.gz | tar xz
          sudo mv ./gitversion /usr/local/bin/gitversion

      - name: Generate version
        id: gitversion
        run: |
          VERSION=$(gitversion /showvariable SemVer || echo "1.0.0")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          echo "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_REGISTRY_USERNAME }}" --password-stdin
          docker build --no-cache -t ${{ secrets.DOCKER_REGISTRY_USERNAME }}/prod-nginx:${{ env.VERSION }} --build-arg ENV_FILE_PATH=src/.env -f docker/prod/LaravelLynxProd.Dockerfile .
          docker push ${{ secrets.DOCKER_REGISTRY_USERNAME }}/prod-nginx:${{ env.VERSION }}

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    needs: build
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./terraform/

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: |
          terraform plan -var "azure_subscription=${{ secrets.AZURE_SUBSCRIPTION }}" \
            -var "docker_registry_username=${{ secrets.DOCKER_REGISTRY_USERNAME }}" \
            -var "docker_registry_password=${{ secrets.DOCKER_REGISTRY_PASSWORD }}" \
            -var "nginx_tag=${{ env.VERSION }}"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          terraform apply -auto-approve -var "azure_subscription=${{ secrets.AZURE_SUBSCRIPTION }}" \
            -var "docker_registry_username=${{ secrets.DOCKER_REGISTRY_USERNAME }}" \
            -var "docker_registry_password=${{ secrets.DOCKER_REGISTRY_PASSWORD }}" \
            -var "nginx_tag=${{ env.VERSION }}"
