name: 'Terraform Deployment'

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    name: 'Dockerization'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Get Latest Image Version
        id: get_version
        run: |
          REPO_NAME="${{ secrets.DOCKER_USERNAME }}/prod-nginx"
          LATEST_VERSION=$(curl -s "https://hub.docker.com/v2/repositories/$REPO_NAME/tags" | jq -r '[.results[].name | select(. | test("^[0-9]+\\.[0-9]+\\.[0-9]+$"))] | sort_by(split(".") | map(tonumber)) | last' || echo "1.0.0")
          
          # Increment the version (e.g., 1.0.0 -> 1.0.1)
          NEW_VERSION=$(echo $LATEST_VERSION | awk -F. '{print $1"."$2"."$3+1}')
          
          echo "Latest Version: $LATEST_VERSION"
          echo "New Version: $NEW_VERSION"
          
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          REPO_NAME="${{ secrets.DOCKER_USERNAME }}/prod-nginx"
          
          docker build --no-cache -t $REPO_NAME:${{ env.NEW_VERSION }} --build-arg ENV_FILE_PATH=src/.env -f docker/prod/LaravelLynxProd.Dockerfile .
          
          docker push $REPO_NAME:${{ env.NEW_VERSION }}

      - name: Logout from Docker Hub
        run: docker logout

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    needs: build
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./terraform/

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: |
          terraform plan -var "azure_subscription=${{ secrets.AZURE_SUBSCRIPTION }}" \
            -var "docker_registry_username=${{ secrets.DOCKER_REGISTRY_USERNAME }}" \
            -var "docker_registry_password=${{ secrets.DOCKER_REGISTRY_PASSWORD }}" \
            -var "nginx_tag=${{ env.VERSION }}"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          terraform apply -auto-approve -var "azure_subscription=${{ secrets.AZURE_SUBSCRIPTION }}" \
            -var "docker_registry_username=${{ secrets.DOCKER_REGISTRY_USERNAME }}" \
            -var "docker_registry_password=${{ secrets.DOCKER_REGISTRY_PASSWORD }}" \
            -var "nginx_tag=${{ env.VERSION }}"
